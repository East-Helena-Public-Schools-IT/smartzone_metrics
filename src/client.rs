use serde::Deserialize;
use crate::smartzone::*;

#[derive(Deserialize)]
#[allow(dead_code)]
pub struct Client {
    #[serde(rename = "apMac")]
    pub ap_mac: String,
    #[serde(rename = "apName")]
    pub ap_name: String,
    #[serde(rename = "hostname")]
    #[serde(deserialize_with = "deserialize_null_default")]
    pub hostname: String,
    #[serde(rename = "status")]
    pub status: String,
    #[serde(rename = "authStatus")]
    pub auth_status: String,
    #[serde(rename = "alerts")]
    #[serde(deserialize_with = "deserialize_null_default")]
    pub alerts: u64,
    #[serde(rename = "osType")]
    pub os_type: String,
    #[serde(rename = "deviceType")]
    pub device_type: String,
    #[serde(rename = "osVendorType")]
    pub os_vendor_type: String,
    #[serde(rename = "modelName")]
    pub model_name: String,
    #[serde(rename = "ipAddress")]
    pub ip_address: String,
    #[serde(rename = "ipv6Address")]
    pub ipv6_address: String,
    #[serde(rename = "clientMac")]
    pub client_mac: String,
    #[serde(rename = "ssid")]
    pub ssid: String,
    #[serde(rename = "txBytes")]
    pub tx_bytes: u64,
    #[serde(rename = "rxBytes")]
    pub rx_bytes: u64,
    #[serde(rename = "txRxBytes")]
    #[serde(deserialize_with = "deserialize_null_default")]
    pub tx_rx_bytes: u64,
    #[serde(rename = "uplink")]
    pub uplink: u64,
    #[serde(rename = "downlink")]
    pub downlink: u64,
    #[serde(rename = "traffic")]
    #[serde(deserialize_with = "deserialize_null_default")]
    pub traffic: u64,
    #[serde(rename = "uplinkRate")]
    #[serde(deserialize_with = "deserialize_null_default")]
    pub uplink_rate: u64,
    #[serde(rename = "downlinkRate")]
    #[serde(deserialize_with = "deserialize_null_default")]
    pub downlink_rate: u64,
    #[serde(rename = "rssi")]
    #[serde(deserialize_with = "deserialize_null_default")]
    pub rssi: i64,
    #[serde(rename = "snr")]
    #[serde(deserialize_with = "deserialize_null_default")]
    pub snr: i64,
    #[serde(rename = "radioType")]
    #[serde(deserialize_with = "deserialize_null_default")]
    pub radio_type: String,
    #[serde(rename = "vlan")]
    pub vlan: u64,
    #[serde(rename = "channel")]
    #[serde(deserialize_with = "deserialize_null_default")]
    pub channel: u64,
    #[serde(rename = "userName")]
    #[serde(deserialize_with = "deserialize_null_default")]
    pub user_name: String,
    #[serde(rename = "authMethod")]
    pub auth_method: String,
    #[serde(rename = "encryptionMethod")]
    pub encryption_method: String,
    #[serde(rename = "controlPlaneName")]
    #[serde(deserialize_with = "deserialize_null_default")]
    pub control_plane_name: String,
    #[serde(rename = "dataPlaneName")]
    #[serde(deserialize_with = "deserialize_null_default")]
    pub data_plane_name: String,
    #[serde(rename = "rxFrames")]
    pub rx_frames: u64,
    #[serde(rename = "txFrames")]
    pub tx_frames: u64,
    #[serde(rename = "txDropDataFrames")]
    #[serde(deserialize_with = "deserialize_null_default")]
    pub tx_drop_data_frames: u64,
    #[serde(rename = "sessionStartTime")]
    pub session_start_time: u64,
    #[serde(rename = "speedflex")]
    pub speedflex: u64,
    #[serde(rename = "wlanType")]
    pub wlan_type: String,
    #[serde(rename = "zoneId")]
    pub zone_id: String,
    #[serde(rename = "zoneVersion")]
    pub zone_version: String,
}
